  - name: create ec2 and r53 
    hosts: local
    connection: local
    vars:
      sg_id: sg-0a45058bd6da2342c
      subnets: subnet-0e2183fb4245ac220
      ami_id: ami-09c813fb71547fc4f
      instance_type: t3.micro
      zone: daws17s.online
      instances:
      - mysql
      - backend
      - frontend
    
    tasks:
    - name: install python libraries
      ansible.builtin.pip:
        name: "{{ item }}"
        executable: pip3.9
      loop:
      - boto3
      - botocore

    - name: creting ec2 instances
      amazon.aws.ec2_instance:
         name: "{{ item }}"
         security_group: "{{ sg_id }}"
         subnet_id: "{{ subnets }}"
         image_id: "{{ ami_id }}"
         instance_type: "{{ instance_type }}"
      loop: "{{ instances }}"
      register: ec2_info

    - name: print the output 
      ansible.builtin.debug:
         msg: "{{ ec2_info }}"
    - name: print the private ip address
      ansible.builtin.debug:
         msg: "{{ item.instances[0].private_ip_address}}"
      loop: "{{ ec2_info.results }}"

    - name: crate r53 records
      amazon.aws.route53:

        state: present
        zone: "{{ zone }}"
        record: "{{ item.item}}.{{ zone }}"
        type: A
        value: "{{ item.instances[0].private_ip_address }}"
        ttl: 1
        overwrite: true
        wait: true
      loop: "{{ ec2_info.results }}"

    - name: crete public ip record for frontend
      amazon.aws.route53:
          state: present
          zone: "{{ zone }}"
          record: "{{ zone }}"
          type: A
          ttl: 1
          value: "{{ item.instances[0].public_ip_address }}"
          wait: true
          overwrite: true
      loop: "{{ ec2_info.results }}"
      when: item.item == "frontend"
           


